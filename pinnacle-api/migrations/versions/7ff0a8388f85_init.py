"""init

Revision ID: 7ff0a8388f85
Revises: 
Create Date: 2024-07-14 18:54:11.412622

"""
from typing import Sequence, Union

import fastapi_users_db_sqlalchemy
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '7ff0a8388f85'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('label',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=55), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('project',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('name_key', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('has_backlog', sa.Boolean(), nullable=False),
    sa.Column('methodology', sa.Enum('SCRUM', 'KANBAN', name='projectmethodology'), nullable=False),
    sa.Column('security_level', sa.Enum('LEVEL1', 'LEVEL2', 'LEVEL3', name='projectsecuritylevel'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name_key')
    )
    op.create_table('security_topic',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('topic_id', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('summary', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('topic_id')
    )
    op.create_table('user',
    sa.Column('fullname', sa.String(length=1000), nullable=False),
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fullname')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('oauth_account',
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('oauth_name', sa.String(length=100), nullable=False),
    sa.Column('access_token', sa.String(length=1024), nullable=False),
    sa.Column('expires_at', sa.Integer(), nullable=True),
    sa.Column('refresh_token', sa.String(length=1024), nullable=True),
    sa.Column('account_id', sa.String(length=320), nullable=False),
    sa.Column('account_email', sa.String(length=320), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_oauth_account_account_id'), 'oauth_account', ['account_id'], unique=False)
    op.create_index(op.f('ix_oauth_account_oauth_name'), 'oauth_account', ['oauth_name'], unique=False)
    op.create_table('project_security_topic_association',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('security_topic_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['security_topic_id'], ['security_topic.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'security_topic_id')
    )
    op.create_table('security_section',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('section_id', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('summary', sa.String(length=500), nullable=True),
    sa.Column('topic_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['security_topic.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('section_id')
    )
    op.create_table('user_project_association',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'project_id')
    )
    op.create_table('workflow',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('goal', sa.String(length=1000), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('project_security_section_association',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('security_section_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['security_section_id'], ['security_section.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'security_section_id')
    )
    op.create_table('security_control',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('control_id', sa.String(length=10), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('section_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['section_id'], ['security_section.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('control_id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('state',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('is_final_state', sa.Boolean(), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflow.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('issue',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('effort', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Enum('LOW', 'HIGH', name='issuepriority'), nullable=True),
    sa.Column('state_id', sa.UUID(), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['state_id'], ['state.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflow.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('issue_label_association',
    sa.Column('issue_id', sa.UUID(), nullable=False),
    sa.Column('label_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ),
    sa.ForeignKeyConstraint(['label_id'], ['label.id'], ),
    sa.PrimaryKeyConstraint('issue_id', 'label_id')
    )
    op.create_table('issue_security_control_association',
    sa.Column('issue_id', sa.UUID(), nullable=False),
    sa.Column('security_control_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ),
    sa.ForeignKeyConstraint(['security_control_id'], ['security_control.id'], ),
    sa.PrimaryKeyConstraint('issue_id', 'security_control_id')
    )
    op.create_table('user_issue_association',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('issue_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'issue_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_issue_association')
    op.drop_table('issue_security_control_association')
    op.drop_table('issue_label_association')
    op.drop_table('issue')
    op.drop_table('state')
    op.drop_table('security_control')
    op.drop_table('project_security_section_association')
    op.drop_table('workflow')
    op.drop_table('user_project_association')
    op.drop_table('security_section')
    op.drop_table('project_security_topic_association')
    op.drop_index(op.f('ix_oauth_account_oauth_name'), table_name='oauth_account')
    op.drop_index(op.f('ix_oauth_account_account_id'), table_name='oauth_account')
    op.drop_table('oauth_account')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('security_topic')
    op.drop_table('project')
    op.drop_table('label')
    # ### end Alembic commands ###
